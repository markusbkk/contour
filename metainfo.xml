<?xml version="1.0" encoding="UTF-8"?>

<component type="desktop">
  <id>org.contourterminal.Contour</id>
  <metadata_license>CC0-1.0</metadata_license>
  <project_license>Apache-2.0</project_license>
  <content_rating type="oars-1.0" />
  <name>Contour Terminal Emulator</name>
  <developer_name>Christian Parpart</developer_name>
  <url type="homepage">https://github.com/contour-terminal/contour/</url>
  <url type="bugtracker">https://github.com/contour-terminal/contour/issues</url>

  <launchable type="desktop-id">org.contourterminal.Contour.desktop</launchable>

  <supports>
    <control>pointing</control>
    <control>keyboard</control>
    <control>console</control>
  </supports>

  <provides>
    <binary>contour</binary>
    <mediatype>inode/directory</mediatype>
  </provides>

  <categories>
    <category>System</category>
  </categories>

  <summary>
    Contour is a modern and actually fast, modal, virtual terminal emulator, for everyday use
  </summary>

  <icon type="remote" width="256" height="256">https://raw.githubusercontent.com/contour-terminal/contour/4f565357720915402aca5ca63ca1fa812ed4741f/src/contour/res/images/contour-logo.png</icon>

  <description>
    <p>
      Contour is a modern and actually fast, modal, virtual terminal emulator,
      for everyday use. It is aiming for power users with a modern feature mindset.
    </p>
    <ul>
      <li>Available on all 4 major platforms, Linux, OS/X, FreeBSD, Windows.</li>
      <li>GPU-accelerated rendering.</li>
      <li>Font ligatures support (such as in Fira Code).</li>
      <li>Unicode: Emoji support (-: üåà üíù üòõ üë™ - including ZWJ, VS15, VS16 emoji :-)</li>
      <li>Unicode: Grapheme cluster support</li>
      <li>Bold and italic fonts</li>
      <li>High-DPI support.</li>
      <li>Vertical Line Markers (quickly jump to markers in your history!)</li>
      <li>Vi-like input modes for improved selection and copy'n'paste experience and Vi-like scrolloff feature.</li>
      <li>Blurred behind transparent background when using Windows 10 or KDE window manager on Linux.</li>
      <li>Blurrable Background image support.</li>
      <li>Runtime configuration reload</li>
      <li>256-color and Truecolor support</li>
      <li>Key binding customization</li>
      <li>Color Schemes</li>
      <li>Profiles (grouped customization of: color scheme, login shell, and related behaviours)</li>
      <li>Synchronized rendering</li>
      <li>Text reflow (configurable via SM ? 2028 / RM ? 2028)</li>
      <li>Clickable hyperlinks via OSC 8</li>
      <li>Clipboard setting via OSC 52</li>
      <li>Sixel inline images</li>
      <li>Terminal page buffer capture VT extension</li>
      <li>Builtin Fira Code inspired progress bar support.</li>
      <li>Read-only mode, protecting against accidental user-input to the running application, such as Ctrl+C.</li>
      <li>VT320 Host-programmable and Indicator status line support.</li>
      <li>and much more ...</li>
    </ul>
  </description>

  <screenshots>
    <screenshot type="default">
      <image>https://raw.githubusercontent.com/contour-terminal/contour/4f565357720915402aca5ca63ca1fa812ed4741f/docs/screenshots/contour-screenshots-0.1.0-pre2.png</image>
      <caption>Contour Terminal emulator being used to show some of its features</caption>
    </screenshot>
    <screenshot type="default">
      <image>https://raw.githubusercontent.com/contour-terminal/contour/4f565357720915402aca5ca63ca1fa812ed4741f/docs/screenshots/contour-notcurses-ncneofetch.png</image>
      <caption>Demonstrating (notcurses) neofetch tool on Fedora with a semi transparent image in the terminal</caption>
    </screenshot>
  </screenshots>

  <keywords>
    <keyword>CLI</keyword>
    <keyword>administration</keyword>
    <keyword>development</keyword>
    <keyword>programming</keyword>
    <keyword>shell</keyword>
    <keyword>terminal</keyword>
  </keywords>

  <releases>

    <!-- unreleased: TODO: Don't forget to add date attribute to it. -->
    <!--

    <release version="x.y.z" urgency="medium" type="development">
      <description>
        <ul>
          <li> ... </li>
        </ul>
      </description>
    </release>

    -->

    <release version="0.3.8" urgency="medium" type="development">
      <description>
        <ul>
          <li>Fixes restoring the cursor visibility after leaving alternate screen when application wasn't restoring mode switches in reverse order.</li>
          <li>Fixes country flags rendering due to misleading grapheme cluster segmentation in corner cases.</li>
					<li>Vi Mode search handle line wrapping (#869) (#870).</li>
        </ul>
      </description>
    </release>

    <release version="0.3.7" urgency="medium" type="development">
      <description>
        <ul>
          <li>Fixes display of non-insert mode (vi-like) cursor on monochrome lines.</li>
          <li>Fixes cursor movements on wide characters for the vi-like cursor.</li>
          <li>Fixes TERM value resolving in Flatpak environment when not escaping the sandbox.</li>
        </ul>
      </description>
    </release>

    <release version="0.3.6" urgency="medium" date="2022-10-30">
      <description>
        <ul>
          <li>Fixes ground-state infinite loop in corner case + refactor and tiny optimization.</li>
          <li>Fixes assertion in optimized bulk text processing.</li>
          <li>Fixes rare displacement of characters following a wide character (e.g. Emoji) in some cases.</li>
          <li>Fixes IME (input method editor) background rendering for wide characters (e.g. Kanji).</li>
          <li>Fixes `escape_sandbox` config option that wasn't set to `true` by default as documented.</li>
          <li>Improve throughput performance for scroll-up when custom vertical margins are in effect.</li>
          <li>Improve rendering performance slightly for so called trivial lines.</li>
          <li>Adds menu entry to Dolphin file manager to open Contour at current working directory.</li>
        </ul>
      </description>
    </release>

    <release version="0.3.5" urgency="medium" date="2022-10-21">
      <description>
        <ul>
          <li>Fixes a problem with oversized glyphs being wrongly cut off (#821).</li>
          <li>Fixes Sixel handling of non-standard aspect ratio (#827).</li>
          <li>Fixes Sixel mode, when updating the color palette with a new color, that color must also be used for subsequent paints.</li>
          <li>Fixes vertical cursor movement for Sixel graphics with only newlines (#822).</li>
          <li>Fixes Sixel rendering for images with aspect ratios other than 1:1.</li>
          <li>Fixes Sixel rendering for images that show below but should be rendered above text (#831).</li>
          <li>Fixes cursor highlight in VI mode</li>
          <li>Removes `images.sixel_cursor_conformance` config option.</li>
          <li>Adds VT sequence DECSCA, DECSEL, DECSED and DECSERA to support protected grid areas during erase operations (#29, #30, #31).</li>
          <li>Improve Input Method (IME) handling, visualizing preedit-text.</li>
          <li>Improve throughput performance of arbitrary complex Unicode.</li>
          <li>Update Unicode data to version 15.0.0 (release). See Announcing The Unicode¬Æ Standard, Version 15.0.0.</li>
        </ul>
      </description>
    </release>

    <release version="0.3.4" urgency="medium" date="2022-09-13">
      <description>
        <ul>
          <li>Fixes selection magically deselecting when indicator status line was shown and the top page line was selected.</li>
          <li>Fixes interpretation of VT sequence DECSDM to disable Sixel auto-scrolling, if enabled.</li>
          <li>Fixes visibility of the cursor in some situation when blending too much into the background color.</li>
          <li>Fixes dim/faint coloring to not affect background and default text coloring when feint SGR attribute is set (#786).</li>
          <li>Fixes SGR 9 (crossed out) and 53 (overline) to both look like underline.</li>
          <li>Fixes size of drawn sixel image if no size is given beforehand (#809).</li>
          <li>Fixes glyph rendering for some unexpectly oversized glyphs (#423).</li>
          <li>Adds `line#24` to terminfo file for backwards compatibility.</li>
          <li>Adds configuration key `live_config` to determine whether or not to reload running terminal instances on every config file change.</li>
          <li>Adds DEC-mode 2027 for enabling/discovering Unicode support as per draft specification (Terminal Unicode Core).</li>
          <li>Adds `CreateDebugDump` action to dump terminal state for debugging purposes.</li>
          <li>[Flatpak] Adds configuration key `profiles.*.escape_sandbox` to decide whether or not to escape the sandbox.</li>
          <li>[Packaging] Adding AppImage files to Github release page and CI artifacts and bump Ubuntu packages using Ubuntu 22.04 LTS</li>
          <li>[Linux] Changes context menu icon for "Run in Contour" action to be the Contour logo.</li>
          <li>Improve startup-time by not pre-rasterizing all printable US-ASCII codepoints at once.</li>
        </ul>
      </description>
    </release>

    <release version="0.3.3.204" date="2022-08-30" urgency="medium">
      <description>
        <ul>
          <li>Fixes a screen buffer manipulation bug that may happen on non-stylyzed but interactive command prompts (#787).</li>
          <li>Fixes viewport misalignment when in scrollback area white new lines are being added to the main page area.</li>
          <li>Fixes logging file toggle.</li>
          <li>Adds VT sequence `CSI 5m` (blink) and `CSI 6m` (rapid blink).</li>
          <li>Adds vim-like `scrolloff` feature to normal mode cursor movements to ensure a line padding when scrolling up/down.</li>
          <li>Adds vim-like incremental search functionality with realtime highlighting and cycling through the matches.</li>
          <li>Adds ability to initiate search via configuration action `SearchReverse` in input mappings.</li>
          <li>Adds ability to cancel highlighted search terms via configuration action `NoSearchHighlight` in input mappings.</li>
          <li>Adds input mapping mode `Search` to conditionally enable input mapping when a search term is present.</li>
          <li>Adds support for HSL colorspace in Sixel images.</li>
          <li>Adds configuration key `colorscheme.*.search_highlight` for coloring search matches.</li>
          <li>Adds configuration key `colorscheme.*.search_highlight_focused` for coloring the active search match, containing the cursor.</li>
          <li>Adds alpha value to `colorscheme.*.vi_mode_highlight` color configuration.</li>
          <li>Adds VT sequence for ANSI mode NLM (NewLine Mode).</li>
          <li>Always show indicator status line when ANSI mode KAM is enabled (which can be toggled via action `ToggleInputProtection`).</li>
          <li>Always show indicator status line when in non-insert mode.</li>
          <li>[Linux] Changes the .desktop file name and icon file name to conform to the flatpak recommendations.</li>
          <li>[Linux] Provide an AppStream XML file.</li>
          <li>[Linux] Drop KDE/KWin dependency on the binary by implementing enabling blur-behind background manually.</li>
          <li>[Linux] Adds support for blur-behind window on GNOME shell.</li>
          <li>[Flatpak] Also pass stdout-fastpipe (`3`) to shell.</li>
          <li>[Flatpak] Do not set controlling terminal in order to allow TTY abilities like Ctrl+C. This seems to be a known bug in flatpak.</li>
          <li>[Flatpak] Exposes TERMINFO environment variable pointing to a valid path containing the contour terminfo file.</li>
          <li>Changes behavior of PTY (and shell process) creation until only when a PTY is required by the terminal emulator during instanciation, possibly avoiding problems with xdotool running too early.</li>
          <li>Internal: Y-axis inverted to match GUI coordinate systems where (0, 0) is top left rather than bottom left.</li>
        </ul>
      </description>
    </release>

    <release version="0.3.2.202" date="2022-07-07" urgency="medium">
      <description>
        <ul>
          <li>Fixes writing to a non-empty line sometimes destroying the contents of that line (#702).</li>
          <li>Fixes underline decoration for wide character cells.</li>
          <li>Fixes SGR 8 (Conceal/Hidden) attribute doesn't work as expected (#699).</li>
          <li>Fixes Synchronized Updates (`SM/RM ? 2026`) sometimes lagging behind in rendering.</li>
          <li>Fixes SGR and text breakage when altering charsets via `ESC ( 0` VT sequence (#661).</li>
          <li>Fixes SEGV when closing the terminal via GUI close button.</li>
          <li>Fixes scrolling in alt-screen.</li>
          <li>Fixes VT sequence for setting indexed color from palette.</li>
          <li>Fixes some config false positives error messages.</li>
          <li>Fixes command line arguments parser handling of `--` for switching to verbatim mode (#670).</li>
          <li>Fixes rendering of U+E0B2 ÓÇ≤ in pixel-perfect box drawing mode (#707).</li>
          <li>Fixes rendering of cursor sometimes being almost invisible when foreground and background colors are similar/equal (#691).</li>
          <li>Fixes line based selection sometimes not selecting the full line when wrapped over multiple lines.</li>
          <li>Fixes warning message on terminal's console output when enabling blurred background images.</li>
          <li>Fixes Win32 command output: Attaches to parent console if present, so typing `contour help` in a terminal actually shows something.</li>
          <li>Changes `XTSMGRAPHICS` to match implementation of xterm *exactly* when querying sixel image limits, to be capped at terminal viewport dimensions (#656).</li>
          <li>Changes CLI syntax for `contour parser-table` to `contour generate parser-table`.</li>
          <li>Implements UTF-8 encoded mouse transport (`CSI ? 1005 h`)</li>
          <li>Modal mode: Improved vi-like input modes.</li>
          <li>Modal mode: Fixed the text cursor not being visible during selection.</li>
          <li>Modal mode: Don't leak but actually support cursor keys up/down/left/right/page-up/page-down.</li>
          <li>Modal mode: Added `vip`, `vap` (and `yip` / `yap`) motions.</li>
          <li>Modal mode: Adds `^` motion.</li>
          <li>Modal mode: When being in normal mode, pressing `a` also puts you back to insert mode.</li>
          <li>Modal mode: Properly show cursor if it was hidden in insert mode and restore visibility &amp; shape when going back to insert mode.</li>
          <li>Modal mode: Shift+K and Shift+J don't just move the cursor up/down but also move the terminal's viewport respectively (inspired by tmux).</li>
          <li>Modal mode: Shift+H and Shift+L to move cursor to the current viewport's page top/bottom (inspired by tmux).</li>
          <li>Modal mode: and more...</li>
          <li>Adds new config option `profile.*.vi_mode_highlight_timeout` and `colorscheme.*.vi_mode_highlight` and adds cell highlighting on yank (#669).</li>
          <li>Adds support for running on ARMv8 platform with crypto extensions (#611).</li>
          <li>Adds back support OpenGL ES (3.1).</li>
          <li>Adds E3 capability, so `clear` now defaults to clearing screen and scrollback (#693).</li>
          <li>Adds specialized PTY implementation for Linux operating system utilizing OS-specific kernel APIs.</li>
          <li>Adds basic support for Indicator status line and their VT sequences `DECSASD` and `DECSSDT`, and `DECRQSS` has been adapted (#687).</li>
          <li>Adds configuration option `profiles.*.status_line.display` to be either `none` or `indicator` to reflect the initial state of the status line (more customizability of the Indicator status-line will come in future releases).</li>
          <li>Adds new action `ToggleInputProtection` to protect terminal application against accidental input (#697).</li>
          <li>Adds configuration options `logging.enabled` as well as `logging.file`.</li>
          <li>Adds VT sequences `XTPUSHCOLORS`, `XTPOPCOLORS`, `XTREPORTCOLORS` (#714).</li>
          <li>Adds CLI syntax `contour info vt` to print list of supported VT sequences (#730).</li>
          <li>Adds VT sequence `DECPS` (#237).</li>
          <li>Adds new config option `colorscheme.selection.foreground_alpha` and `colorscheme.selection.background_alpha` to enable somewhat more eye-candy visual looks on text selection.</li>
          <li>Extends config option `colorscheme.selection.foreground` and `colorscheme.selection.background` to also accept `CellForeground` and `CellBackground` as value.</li>
        </ul>
      </description>
    </release>

    <release version="0.3.1.200" date="2022-05-01" urgency="medium">
      <description>
        <ul>
          <li>Adds Vi-like input modes for improved selection and copy'n'paste experience.</li>
          <li>Adds contour executable to search path for spawned shell process on OS/X and Windows.</li>
          <li>Adds customizability to dim colors (#664).</li>
          <li>Adds the profile configuration option: `draw_bold_text_with_bright_colors`.</li>
          <li>Fixes `CSI K` accidentally removing line flags, e.g. line marks (#658).</li>
          <li>Fixes wrong-spacing rendering bug on some lines.</li>
          <li>Fixes assertion on font resize when a (Sixel) image is currently being rendered (#642).</li>
          <li>Fixes assertion on too quick shell terminations (#647).</li>
          <li>Fixes fallback shell execution on UNIX-like systems when the reuqested shell cannot be spawned (#647).</li>
          <li>Fixes selection being wrongly rendered when viewport is scrolled (#641).</li>
          <li>Fixes full-line selection not properly injecting linefeeds between the lines.</li>
          <li>Changes behaviour of full-line selection to include a trailing linefeed for the last line (#641).</li>
          <li>Changes behaviour of bold text to by rendered using normal colors by default (was forced to bright before, and is now configurable via `draw_bold_text_with_bright_colors`).</li>
        </ul>
      </description>
    </release>

    <release version="0.3.0.198" date="2022-04-18" urgency="medium">
      <description>
        <p>
          TLDR; Many thanks to all for the great support and feedback. This release
          marks a huge milestone for me especially with regards to VT backend performance(!),
          improved rendering architecture, and a more complete list of pixel perfect box drawings.
        </p>

        <ul>
          <li>Fixes installation from `.deb` (missing terminfo dependency)</li>
          <li>Fixes PTY write race condition.</li>
          <li>Fixes VT sequence `DECFI`.</li>
          <li>Fixes VT sequence `ICH` (#559).</li>
          <li>Fixes VT sequence `OSC 4`'s response.</li>
          <li>Fixes VT sequence `OESC 4` to also support setting color via `#RRGGBB`.</li>
          <li>Fixes VT sequence extension: capture buffer (#493).</li>
          <li>Fixes `DECRC` with respect to `DECSTBM` enabled and `DECOM` being inverted interpreted.</li>
          <li>Fixes `XTGETTCAP` (#582).</li>
          <li>Fixes `SU` in combination with `DECLRM` (#593).</li>
          <li>Fixes an assertion in text renderer.</li>
          <li>Fixes wrongly advertising DEC locator mode (it is not supported).</li>
          <li>Improved VT backend performance (#342).</li>
          <li>Improved text selection behaviour.</li>
          <li>Improved detection of runtime DPI changes for KDE (Plasma) desktop environment.</li>
          <li>Improves Window manipulation VT sequence for saving/restoring window title (`CSI 22 ; Ps t`, `CSI 23 ; Ps t`)</li>
          <li>Adds pixel-perfect box-drawing for U+EE00 .. U+EE05 for progress bar glyphs as first introduced by Fira Code (#521).</li>
          <li>Adds pixel-perfect box-drawing for U+E0B0, U+E0B2, U+E0BA (Triangle Powerline glyphs).</li>
          <li>Adds preliminary implementation of `DA3` VT sequence.</li>
          <li>Adds new configuration option `mouse_block_selection_modifier`.</li>
          <li>Adds new configuration option `profiles.*.copy_last_mark_range_offset` (default `0`) to adjust where to start looking upwards for the `CopyPreviousMarkRange` action. This is useful for multi-line prompts.</li>
          <li>Adds new configuration option `platform_plugin`.</li>
          <li>Adds new configuration option `renderer.backend` for explicitly setting renderer to one of: `OpenGL`, `software`, `default`.</li>
          <li>Adds new configuration option `renderer.tile_hashtable_slots` to configure texture atlas hashtable capacity.</li>
          <li>Adds new configuration option `renderer.tile_cache_count` to configure texture atlas cache capacity.</li>
          <li>Adds new configuration option `renderer.tile_direct_mapping` to enable/disalbe texture atlas direct mapping.</li>
          <li>Adds new colorscheme setting `background_image.path` and `background_image.opacity` to optionally render a terminal background image.</li>
          <li>Adds stdout-fastpipe support on new shell file descriptor `3` and exposing availability via environment variable `STDOUT_FASTPIPE` (with value `3`). When writing to this file descriptor rather than to stdout (file descriptor `1`), the full performance of Contour can be explored.</li>
          <li>Adds new configuration option `pty_buffer_size` for tweaking the new size in bytes for the PTY buffer objects.</li>
          <li>Adds `mock` font locator (mostly interesting for advanced use for CI testing).</li>
          <li>Adds VT sequence `SM ? 8452 h` / `RM ? 8452 l` for enabling/disabling sixel cursor placement conformance (xterm extension).</li>
          <li>Adds SGR-Pixels support, VT sequence `SM ? 1016 h` / `RM ? 1016 l` (#574).</li>
          <li>Adds VT sequence DECCARA, Change Attributes in Rectangular Area, with the extension that it applies to *all* SGR attributes. (#15).</li>
        </ul>
      </description>
    </release>

    <release version="0.2.3.183" date="2022-01-09" urgency="medium">
      <description>
        <p>
          Important: It is recommended to also use the latest `contour` termcap file if you are already using one
          from a previous release.
        </p>

        <ul>
          <li>Fixes Sixel image rendering when scrolling is needed and ANSI cursor is not on left margin.</li>
          <li>Fixes Qt-related CLI options that that were largely ignored.</li>
          <li>Fixes crash caused by VT sequence PM and SOS (#513).</li>
          <li>Fixes parsing VT sequence RGB color parsing for cell decoratioins (e.g. underline).</li>
          <li>Fixes double-underline to not look like a very thick line on small font sizes.</li>
          <li>Applies antialiasing to curly underline.</li>
          <li>Changes `contour` exit code to reflect the shell's exit code of the last closed window.</li>
          <li>Improves text cursor rendering and extends cursor configuration accordingly (#526).</li>
          <li>Improves visual appearance of dotted underline SGR.</li>
          <li>Adds CLI option `terminal early-exit-threshold SECS` (defaulting to 6) to only report and wait if the process did exit below this threshold seconds.</li>
          <li>Adds CLI option `terminal dump-state-at-exit` to auto-dump internal state at exit.</li>
          <li>Adds support for CoreText for matching font descriptions and font fallback (#479).</li>
          <li>Adds support for font feature settings. This is currently only implemented for `openshaper`, not yet for `dwrite` (#520).</li>
          <li>Adds pixel-perfect box-drawing for U+E0B4, U+E0B6, U+E0BC, U+E0BE (some Powerline extended codepoints).</li>
        </ul>
      </description>
    </release>

    <release version="0.2.2.175" date="2021-11-19" urgency="medium">
      <description>
        <ul>
          <li>Fixes input mapping containing `Control` modifier.</li>
          <li>Fixes input mapping mode `Select` being ignored.</li>
          <li>Fixes Modifier+Enter input mapping not being catched.</li>
          <li>Fixes slant detection for DirectWrite.</li>
          <li>Changes `DECCOLM` to only switch back to 80 when it was 132 before.</li>
          <li>Adds new config option `spawn_new_process` to define new terminal window behavior.</li>
          <li>Adds action `CancelSelection` to allow actively canceling selection via input mappings.</li>
          <li>Adds key bindings to default configuration to allow simply pressing Ctrl+C/Ctrl+V (without Shift modifier) when an active selection is present.</li>
          <li>Adds process current working directory on macOS.</li>
          <li>Adds `contour license` CLI command to show project license but also an overview of all dependencies.</li>
          <li>Adds a proper CLI to `bench-headless`. Building the headless benchmark tool is not shipped by default.</li>
        </ul>
      </description>
    </release>

    <release version="0.2.1.174" date="2021-11-14" urgency="medium">
      <description>
        <ul>
          <li>Reverts change from 0.2.0: "Changes behaviour when receiving `U+FE0E` (VS15) to not enforce the width of 1 but leave it as is (usually 2). This seems to match what the web browser is doing, too."</li>
          <li>Adds support for loading terminal color schemes from an exernal file, such as `~/.config/contour/colorschemes/onedark.yml` for the scheme `onedark` (file file format is simply a sub-tree of how colors can be specified inline).</li>
          <li>Adds some more tmux-extension entries to the terminfo database that are supported by contour (`Ss`, `Se`, `Cs`, `Smol`, `Smulx`, `Setulc`).</li>
          <li>Adds `Sync` capability entry to terminfo file.</li>
          <li>Adds many more pixel-perfect graphical characters: `23A1`..`23A6`, `2580`..`2590`, `2594`..`259F`, `1FB00`..`1FB3B`, `1FB3C`..`1FBAF`, `1FBF0`..`1FBF9`.</li>
          <li>Adds support for building with embedded FreeType and HarfBuzz (experimental, disabled by default).</li>
          <li>Adds a shell early-exit-guard to not instantly close the terminal window but print a message instead and wait for any key press in order to close.</li>
          <li>Adds missing config option `read_buffer_size` to default `contour.yml`.</li>
          <li>Adds new config option `reflow_on_resize` to mandate whether or not text reflow is enabled on primary screen. If this option is false, it cannot be enabled programmatically either.</li>
          <li>Adds new config option `on_mouse_select` to decide what action to pick when text has been selected (copy to clipboard or copy to selection-clipboard, or do nothing)</li>
          <li>Unicode data updated to version 14.0 (release). See Announcing The Unicode¬Æ Standard, Version 14.0.</li>
          <li>Do not force OpenGL ES on Linux anymore.</li>
          <li>Changes default (Sixel) image size limits to the primary screen's pixel dimensions (#408).</li>
          <li>Changes font locator engine default on Windows to DirectWrite (#452).</li>
          <li>Changes tcap-query feature from experimental to always enabled (not configurable anymore).</li>
          <li>Automatically detect if `contour` or `contour-latest` terminfo entries are present use that as default.</li>
          <li>Fixes VT sequences that cause a cursor restore to sometimes crash.</li>
          <li>Fixes terminfo installation path on OS/X and tries to auto-set `TERMINFO_DIRS` to it on startup (#443).</li>
          <li>Fixes terminfo entry `pairs`.</li>
          <li>Fixes SGR 24 to remove any kind of underline (#451).</li>
          <li>Fixes font fallback for `open_shaper` where in rare cases the text was not rendered at all.</li>
          <li>Fixes CPU load going up on mouse move inside terminal window (#407).</li>
          <li>Fixes terminfo entries accidentally double-escaping `\E` to `\\E` (#399).</li>
          <li>Fixes RGB color parsing via ':2::Pr:Pg:Pb' syntax and also adapt setrgbf &amp; setrgbb accordingly.</li>
          <li>Fixes SEGV with overflowing (Sixel) images (#409).</li>
          <li>Fixes XTSMGRAPHICS for invalid SetValue actions and setting Sixel image size limits (#422).</li>
          <li>Fixes internal pixel width/height tracking in VT screen, which did affect sizes of rendered Sixel images (#408).</li>
          <li>Fixes configuring a custom shell on OS/X (#425).</li>
          <li>Fixes off-by-one bug in builtin box drawing (#424).</li>
          <li>Fixes assertion in text renderer with regards to colored glyphs.</li>
          <li>Fixes Sixel background select to support transparency (#450).</li>
          <li>Fixes session resuming on KDE desktop envionment which is respawing all Contour instances upon re-login but failed due to invalid command line parameters (#461).</li>
          <li>Fixes Meta+Key keyboard inputs being ignored.</li>
          <li>Changes DECSDM such that it works like a real VT340; also xterm, as of version 369, changed that recently (#287).</li>
          <li>Adds context menu support for KDE.</li>
        </ul>
      </description>
    </release>

    <release version="0.2.0.173" date="2021-08-17" urgency="medium">
      <description>
        <ul>
          <li>Improved performance (optimized render loop, optimized grapheme cluster segmentation algorithm)</li>
          <li>Improves selection to better automatically deselect on selected area corruption.</li>
          <li>Fixes `ioctl(..., TIOCGWINSZ, ...)` pixel values that were only set during resize but not initially.</li>
          <li>Fixes mouse in VIM+Vimspector to also change the document position when moving the mouse.</li>
          <li>Fixes SGR decorations to use designated underline thickness and underline position.</li>
          <li>Fixes font glyph render in some corner cases where the rendered glyph did result in rectangle garbage on the screen.</li>
          <li>Fixes copying the selection containing trailing whitespaces.</li>
          <li>Fixes hard-reset with regards to default tab width.</li>
          <li>Fixes VT sequence `DECRQPSR` for `DECTABSR`.</li>
          <li>Fixes keyboard keys for `F1`..`F4` when pressed with and without modifiers.</li>
          <li>Fixes OSC 8 hyperlink rendering when scrolled.</li>
          <li>Fixes SGR 1 (bold) wrongly applied on indexed background colors.</li>
          <li>Fixes text shaping sometimes showing missing glyphs instead of the actual glyphs (by changing the last-resort font fallback mechanism to chape each cluster individually with its own font fallback).</li>
          <li>Preserve active profile when reloading config, and forces redraw after config reload.</li>
          <li>Changes config entry `profile.*.font_size` to `profile.*.font.size`.</li>
          <li>Changes config entries `scrollbar.*` to `profile.*.scrollbar.*`.</li>
          <li>Changes behavior of live configuration reload, which is not default anymore and must be explicitly enabled via CLI parameter `--live-config`.</li>
          <li>Changes behaviour when receiving `U+FE0E` (VS15) to not enforce the width of 1 but leave it as is (usually 2). This seems to match what the web browser is doing, too.</li>
          <li>Changes the CLI command line interface syntax.</li>
          <li>Removes `tab_width` configuration. Tab width cannot be configured anymore but remaints by default at 8.</li>
          <li>Adds basic automatically created archive for Arch Linux to the CI build artifacts page and release page.</li>
          <li>Adds support for bypassing the mouse protocol via Shift-click (configurable via `bypass_mouse_protocol_modifier`)</li>
          <li>Adds improved debug logging. via CLI flag `-d` (`--enable-debug`) to accept a comma seperated list of tags to enable logging for. Appending a `*` at the end of a debug tag will enable all debug tags that match prefix its prefix.  The list of available debuglog tags can be found via CLI flag `-D` (`--list-debug-tags`).</li>
          <li>Adds support for different font render modes: `lcd`, `light`, `gray`, `monochrome` in `profiles.NAME.font.render_mode` (default: `lcd`).</li>
          <li>Adds support for different text render engines: `OpenShaper`, `DirectWrite` and `CoreText` for upcoming native platform support on Windows (and later OS/X).</li>
          <li>Adds support for different font location engines: `fontconfig` (others will follow).</li>
          <li>Adds experimental text reflow.</li>
          <li>Adds OpenFileManager action to configuration.</li>
          <li>Adds terminal identification environment variables `TERMINAL_NAME`, `TERMINAL_VERSION_TRIPLE` and `TERMINAL_VERSION_STRING`.</li>
          <li>Adds config option `mode` to input modifiers for additionally filtering based on modes (alt screen, app cursor/keypad, text selection modes, ...).</li>
          <li>Adds config option `profile.*.terminal_id: STR` to set the terminal identification to one of VT100, VT220, VT340, etc.</li>
          <li>Adds config option `profile.*.maximized: BOOL` to indicate maximized state during profile activation.</li>
          <li>Adds config option `profile.*.fullscreen: BOOL` to indicate fullscreen state during profile activation.</li>
          <li>Adds config option `profile.*.font.strict_spacing: BOOL` to indicate that only monospace fonts may be used.</li>
          <li>Adds config option `profile.*.font.TYPE.weight: WEIGHT` and `profile.*.fonts.TYPE.slant: SLANT` options (optional) along with `profile.*.fonts.TYPE.family: STRING`.</li>
          <li>Adds config option `profile.*.font.TYPE.weight: WEIGHT` and `profile.*.fonts.TYPE.slant: SLANT` options (optional) along with `profile.*.fonts.TYPE.family: STRING`.</li>
          <li>Adds config option `profile.*.font.dpi_scale: FLOAT` to apply some additional DPI scaling on fonts.</li>
          <li>Adds config option `profile.*.font.builtin_box_drawing: BOOL` to use pixel-perfect builtin box drawing instead of font provided box drawing characters.</li>
          <li>Adds config option `profile.*.refresh_rate: FLOAT` to configure how often the terminal screen will be rendered at most when currently under heavy screen changes. A value of `"auto"` will use the currently connected monitor's refresh rate.</li>
          <li>Adds configuration's action `ToggleAllKeyMaps` to enable/disable intercepting and interpreting keybinds. The one that did toggle it will not be disabled.</li>
          <li>Adds configuration's action `ClearHistoryAndReset` to clear the history, and resetting the terminal.</li>
          <li>Adds VT sequence for enabling/disabling debug logging. `CSI ? 46 h` and `CSI ? 46 l` and CLI option `-d`.</li>
          <li>Adds VT sequence for querying/setting current font `OSC 50 ; ? ST` and `OSC 50 ; Font ST` (and `OSC 60 Ps Ps Ps Ps Ps ST` for a more fine grained font query/setting control).</li>
          <li>Adds VT sequence `CSI 18 t` and `CSI 19 t` for getting screen character size. Responds with `CSI 8 ; $columns ; $rows t` and  `CSI 9 ; $columns ; $rows t` respectively.</li>
          <li>Adds VT sequence to capture the current screen buffer `CSI > LineMode ; StartLine ; LineCount t` giving the respone back on stdin via `OSC 314 ; $screen_buffer ST`, and feature detection via `DA1` number `314`.</li>
          <li>Adds VT sequence `DECSNLS` for setting number of lines to display.</li>
          <li>Adds VT sequence `CSI Ps b` (`REP`) for repeating the last graphical character `Ps` times.</li>
          <li>Adds VT sequence `OSC 4 ; INDEX ; COLOR ST` for setting or querying color palette (if COLOR is `?` instead of a color spec).</li>
          <li>Adds VT sequence `OSC 104 ; INDEX ST` for resetting color palette entry or complete palette (if no (index is given).</li>
          <li>Adds VT sequence `DECCRA` to copy a rectangular area.</li>
          <li>Adds VT sequence `DECERA` to erase a rectangular area.</li>
          <li>Adds VT sequence `DECFRA` to fill a rectangular area.</li>
          <li>Adds VT sequence `CSI > q` (XTVERSION) to query terminal identification (name and version). Response comes as `DCS >| Contour ContourVersion ST`.</li>
          <li>Adds VT sequence `DECRQM` to request ANSI/DEC modes states (set / unset / not recognized).</li>
          <li>Adds new CLI command: `contour capture ...` to capture the screen buffer.</li>
          <li>Adds new CLI command: `contour set profile to NAME` to change the profile on the fly.</li>
          <li>Adds new CLI command: `contour generate terminfo output OUTPUT_FILE` to create a Contour terminfo file.</li>
          <li>Adds new CLI command: `contour generate config output OUTPUT_FILE` to create a new default config.</li>
          <li>Adds new CLI command: `contour generate integration shell SHELL output OUTPUT_FILE` to create the shell integreation file for the given shell (only zsh supported for now). Also adds a pre-generated shell integration file for Linux (and OS/X) to `/usr/share/contour/shell-integration.zsh`.</li>
          <li>Unicode data updated to version 14.0 beta.</li>
          <li>Adds support for building with Qt 6 (disabled by default).</li>
          <li>Adds support for building with mimalloc (experimental, disabled by default).</li>
        </ul>
      </description>
    </release>

    <release version="0.1.1" date="2020-12-31" urgency="medium">
      <description>
        <ul>
          <li>Fixes race condition when displaying image animations (e.g. gifs via sixel).</li>
          <li>Fixes `NewTerminal` action to also inherit the active configuration file.</li>
          <li>Fixes restoring cursor position in `RM ?1049`.</li>
          <li>Fixes `DECSTR` resetting saved-cursor state and active cursor-position.</li>
          <li>Fixes selecting text not being pushed into the selection-clipboard.</li>
          <li>Adds VT sequence `OSC 7` (set current working directory).</li>
          <li>Adds VT sequence `DCS $ p $Name ST` to change config profile name to `$Name`.</li>
        </ul>
      </description>
    </release>

    <release version="0.1.0" date="2020-12-24">
      <description>
        <ul>
          <li>Available on all 3 major platforms, Linux, OS/X, Windows.</li>
          <li>Emoji support (-: üåà üíù üòõ üë™ :-)</li>
          <li>Font ligatures support (such as in Fira Code).</li>
          <li>Bold and italic fonts</li>
          <li>GPU-accelerated rendering.</li>
          <li>Vertical Line Markers (quickly jump to markers in your history!)</li>
          <li>Blurred behind transparent background when using Windows 10 or KDE window manager on Linux.</li>
          <li>Runtime configuration reload</li>
          <li>256-color and Truecolor support</li>
          <li>Key binding customization</li>
          <li>Color Schemes</li>
          <li>Profiles (grouped customization of: color scheme, login shell, and related behaviours)</li>
          <li>Clickable hyperlinks via OSC 8</li>
          <li>Sixel inline images</li>
        </ul>
      </description>
    </release>

  </releases>

</component>

